@page
@*@model WebApiMongoDB.Views.Home.CadastroModel*@
@{
    Layout = null;
}

@model Usuario

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <!--Link CSS-->
    <link rel="stylesheet" href="~/css/cadastro.css">

    <title>Página de Cadastro</title>
</head>
<body>
    <form method="post" id="registro-form">
        <div class="signup-box">
            <h2>Cadastre-se</h2>
            <div class="form-group">
                <label for="username">Usuário:</label>
                <input type="text" id="nome" name="Nome" placeholder="Escolha um nome de usuário" autocomplete="off" required>
            </div>
            <div class="form-group">
                <label for="email">Email:</label>
                <input type="email" id="email" name="Email" placeholder="Seu endereço de email" required>
            </div>
            <div class="form-group">
                <label for="password">Senha:</label>
                <input type="password" id="senha" name="Senha" placeholder="Escolha uma senha" required>
            </div>
            <div class="form-group">
            <label for="tipo">Tipo</label>
            <select name="Tipo" id="tipo">
            <option value="cliente">Cliente</option>
            <option value="arquiteto">Arquiteto</option>
            <option value="loja">Loja</option>
            </select>
            </div>
            <button type="submit" id="submitForm">Cadastrar</button>
            <p>Já tem uma conta? <a asp-controller="Home" asp-action="Login">Faça Login</a></p>
        </div>
    </form>
</body>

<script>
    document.getElementById("submitForm").addEventListener("click", function (e) {
        e.preventDefault(); // Evita que o formulário seja enviado diretamente.

        const tipo = document.getElementById("tipo").value;

        // Chama o método apropriado com base no tipo
        if (tipo === "cliente") {
            createCliente();
        }
        else if (tipo === "arquiteto") {
            createArquiteto();
        }
        else if (tipo === "loja") {
            createLoja();
        }
        else {
            console.log("Tipo de usuário inválido.");
        }
    });

    function createCliente() {
        const userData = {
            tipo: "cliente",
            nome: document.getElementById("nome").value,
            email: document.getElementById("email").value,
            senha: document.getElementById("senha").value
        };

        // Faça uma solicitação HTTP POST para o controlador CreateCliente
        fetch("/api/cliente/CreateCliente", {
            method: "POST",
            headers: {
                "Content-Type": "application/json"
            },
            body: JSON.stringify(userData)
        })
            .then(response => response.json())
            .then(data => {
                console.log("Cliente criado com sucesso:", data);
                window.location.href = "/";
            })
            .catch(error => {
                console.log("Erro ao criar cliente:", error);
                window.location.href = "/";
            });
    }

    function createArquiteto() {
        const userData = {
            tipo: "arquiteto",
            nome: document.getElementById("nome").value,
            email: document.getElementById("email").value,
            senha: document.getElementById("senha").value
        };

        // Faça uma solicitação HTTP POST para o controlador CreateArquiteto
        fetch("/api/arquiteto/CreateArquiteto", {
            method: "POST",
            headers: {
                "Content-Type": "application/json"
            },
            body: JSON.stringify(userData)
        })
            .then(response => response.json())
            .then(data => {
                console.log("Arquiteto criado com sucesso:", data);
                window.location.href = "/";
            })
            .catch(error => {
                console.log("Erro ao criar arquiteto:", error);
                window.location.href = "/";
            });
    }

    //function createLoja {
    //    const userData = {
    //        tipo: "loja",
    //        nome: document.getElementById("nome").value,
    //        email: document.getElementById("email").value,
    //        senha: document.getElementById("senha").value
    //    };

    //    fetch("/api/loja/CreateLoja", {
    //        method: "POST",
    //        headers {
    //        "Content-Type": "application/json"
    //    },
    //        body: JSON.stringify(userData)
    //                            })
    //                                .then(response => response.json())
    //    .then(data => {
    //        console.log("Arquiteto criado com sucesso:", data);
    //        window.location.href = "/";
    //    })
    //    .catch(error => {
    //        console.log("Erro ao criar arquiteto:", error);
    //        window.location.href = "/Views/Home/Login.cshtml";
    //    });
    //                        }
</script>



</html>

