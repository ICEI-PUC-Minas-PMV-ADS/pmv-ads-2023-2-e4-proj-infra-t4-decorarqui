@{
    Layout = null;
}

@model Usuario

<html>

<head>
    <link rel="stylesheet" href="~/css/cadastro.css" />

</head>

<body>
    <div class="login-cliente">
        <div class="overlap-group-wrapper">
            <div class="overlap-group">
                <div class="rectangle"></div>
                <div class="frame">
                    <select class="custom-select" aria-label="Large select example" id="tipo">
                        <option selected>Selecione o tipo</option>
                        <option value="cliente">Cliente</option>
                        <option value="arquiteto">Arquiteto</option>
                        <option value="loja">Loja</option>
                    </select>
                </div>
                <div class="frame-3">
                    <input type="text" class="custom-input" placeholder="Nome" id="nome" autocomplete="off" />
                </div>
                <div class="div-wrapper">
                    <input type="text" class="custom-input" placeholder="Email" id="email"  autocomplete="off"/>
                </div>
                <div class="frame-2">
                    <input type="password" class="custom-input" placeholder="Senha" id="senha" autocomplete="off" />
                </div>
                <div class="text-wrapper-4">Registre-se</div>
                <div class="text-wrapper-5">Seja bem vindo ao</div>
                <p class="j-um-membro-login">
                    <span class="span">Já é um membro? </span> <span class="text-wrapper-6"><a asp-controller="Home" asp-action="Login">Login</a></span>
                </p>
                <img class="logo-decorarqui" src="~/img/Logo_decorArqui_modelo2.png" />
                <div class="frame-4">
                    <button type="submit" id="submitForm" class="custom-button">Cadastrar</button>
                </div>
                <img class="line" src="img/line-4.svg" />
                <img class="img" src="img/line-5.svg" />
            </div>
        </div>
    </div>
</body>

<script>
    document.getElementById("submitForm").addEventListener("click", function (e) {
        e.preventDefault(); // Evita que o formulário seja enviado diretamente.

        const tipo = document.getElementById("tipo").value;

        // Chama o método apropriado com base no tipo
        if (tipo === "cliente") {
            createCliente();
        }
        else if (tipo === "arquiteto") {
            createArquiteto();
        }
        else if (tipo === "loja") {
            createLoja();
        }
        else {
            console.log("Tipo de usuário inválido.");
        }
    });

    function createCliente() {
        const userData = {
            tipo: "cliente",
            nome: document.getElementById("nome").value,
            email: document.getElementById("email").value,
            senha: document.getElementById("senha").value
        };

        // Faça uma solicitação HTTP POST para o controlador CreateCliente
        fetch("/api/cliente/CreateCliente", {
            method: "POST",
            headers: {
                "Content-Type": "application/json"
            },
            body: JSON.stringify(userData)
        })
            .then(response => response.json())
            .then(data => {
                console.log("Cliente criado com sucesso:", data);
                window.location.href = '@Url.Action("Login", "Home")';
            })
            .catch(error => {
                console.log("Erro ao criar cliente:", error);
                window.location.href = '@Url.Action("Login", "Home")';
            });
    }

    function createArquiteto() {
        const userData = {
            tipo: "arquiteto",
            nome: document.getElementById("nome").value,
            email: document.getElementById("email").value,
            senha: document.getElementById("senha").value
        };

        // Faça uma solicitação HTTP POST para o controlador CreateArquiteto
        fetch("/api/arquiteto/CreateArquiteto", {
            method: "POST",
            headers: {
                "Content-Type": "application/json"
            },
            body: JSON.stringify(userData)
        })
            .then(response => response.json())
            .then(data => {
                console.log("Arquiteto criado com sucesso:", data);
                window.location.href = "/";
            })
            .catch(error => {
                console.log("Erro ao criar arquiteto:", error);
                window.location.href = "/";
            });
    }

        //function createLoja {
        //    const userData = {
        //        tipo: "loja",
        //        nome: document.getElementById("nome").value,
        //        email: document.getElementById("email").value,
        //        senha: document.getElementById("senha").value
        //    };

        //    fetch("/api/loja/CreateLoja", {
        //        method: "POST",
        //        headers {
        //        "Content-Type": "application/json"
        //    },
        //        body: JSON.stringify(userData)
        //                            })
        //                                .then(response => response.json())
        //    .then(data => {
        //        console.log("Arquiteto criado com sucesso:", data);
        //        window.location.href = "/";
        //    })
        //    .catch(error => {
        //        console.log("Erro ao criar arquiteto:", error);
        //        window.location.href = "/Views/Home/Login.cshtml";
        //    });
        //                        }
</script>


</html>